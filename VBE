///////2019 METU VBE  ALIEJUS




#include <fstream>
#include <iostream>
const char FR[]="duom.txt";
const char FW[]="ats.txt";

using namespace std;
void Skaityti(const char FR[],int n[], int Price[], int &FullPrice, int &k);
void Skaiciuoti (int n[], int k, int &suma);
void Irasymas(const char FW[], int k, int suma, int n[], int FullPrice,int Price[]);

int main()
{  int l,m,g;
    int k,FullPrice, suma;
    int Price[100],n[100];
    Skaityti(FR,n,Price, FullPrice, k);
    Skaiciuoti(n,k, suma);
    Irasymas(FW,k,suma,n,FullPrice,Price);
    return 0;
}

void Skaityti(const char FR[],int n[], int Price[], int &FullPrice, int &k)
{
    fstream fr(FR);
    for(int i=0;i<3;i++)
    {
       fr>>n[i];
    }
    fr>>k;
    fr>>FullPrice;
    for(int i=0;i<3;i++)
    {
        fr>>Price[i];
    }
}

void Skaiciuoti (int n[], int k, int &suma)
{
    suma=k;
    for(int i=0; i<3;i++)
    {
        if(i==2)
        {
            n[i]=n[i]*5;
        }
        if(i==1)
        {
            n[i]=n[i]*3;
        }

       suma=suma-n[i];
    }
}

void Irasymas(const char FW[], int k, int suma, int n[], int FullPrice, int Price[])
{
    int r[100];
    int r1=0;
    int r3=0;
    int r5=0;
    int pelnas=0;
    ofstream fw(FW);
   for(int i=0;i<3;i++)
        {
            if(i==2)
            {
                n[i]=n[i]/5;
            }
            if(i==1)
            {
                n[i]=n[i]/3;
            }
            fw<<n[i]<<" ";
        }
        fw<<suma<<endl;
        fw<<'0'<<" "<<'0'<<" "<<'0'<<endl;
    int l=suma;
   for (l > 0; ;) 
   {
        if (l >= 5 )
        {
          l -= 5;
          r5 ++;
        }
        else if (l >= 3) 
        {
            l -= 3;
            r3 ++;
        }
        else if (l >= 1) 
        {
            l -= 1;
            r1 ++;
        }
        else {
            break;
          }
        }
        r[0]=r1;
        r[1]=r3;
        r[2]=r5;
        fw<<r1<<" "<<r3<<" "<<r5<<endl;
        for(int i=2;i>=0;i--)
        {
            pelnas+=Price[i]*(n[i]+r[i]);
        }
        fw<<pelnas-FullPrice;
}

/////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////
     VBE SOKIAI

#include <iostream>
#include <fstream>
#include <algorithm>

using namespace std;
const char FR[] = "U2.txt";
const char FW[] = "U2rez.txt";
const int MAX = 20;
typedef int technika[100][100];
typedef int artistiskumas[100][100];

struct Duomenys {
    string sokeju_pora;
    int taskai;
};

void Skaityti(Duomenys A[], int &n, int &k, technika B, artistiskumas C);
void Skaiciavimai(Duomenys A[], technika B, artistiskumas C, int n, int k);
void Mazejimas(Duomenys A[], int n);
void Irasymas(Duomenys A[], int n);

int main() {
    technika B;
    artistiskumas C;
    Duomenys A[100];
    int n, k;

    Skaityti(A, n, k, B, C);
    Skaiciavimai(A, B, C, n, k);
    Mazejimas(A, n);
    Irasymas(A, n);
    return 0;
}

void Skaityti(Duomenys A[], int &n, int &k, technika B, artistiskumas C)
{
    ifstream fr(FR);
    char name[MAX+1];
    fr >> n >> k;
    fr.ignore();
    for (int i = 0; i < n; i++)
    {
        fr.get(name, MAX);
        A[i].sokeju_pora = name;
        for (int j = 0; j < k; j++)
        {
            fr >> B[i][j];
        }
        for (int j = 0; j < k; j++)
        {
            fr >> C[i][j];
        }
        fr.ignore();
    }
    fr.close();
}

void Skaiciavimai(Duomenys A[], technika B, artistiskumas C, int n, int k)
{
    for (int i = 0; i < n; i++)
    {
        sort(B[i], B[i] + k);
        sort(C[i], C[i] + k);
    }

    for (int i = 0; i < n; i++)
    {
        for (int j = 0; j < k; j++)
        {
            if (j != 0 && j != 4)
            {
                A[i].taskai += B[i][j];
            }
        }
        for (int j = 0; j < k; j++)
            {
            if (j != 0 && j != 4)
            {
                A[i].taskai += C[i][j];
            }
        }
    }
}

void Mazejimas(Duomenys A[], int n)
{
    for (int i = 0; i < n; i++)
        {
        for (int j = i + 1; j < n; j++)
        {
            if (A[i].taskai < A[j].taskai)
            {
                swap(A[i], A[j]);
            }
        }
    }
}

void Irasymas(Duomenys A[], int n) {
    ofstream fw(FW);
    for (int i = 0; i < n; i++)
    {
        fw << A[i].sokeju_pora << " " << A[i].taskai << endl;
    }
    fw.close();
}
