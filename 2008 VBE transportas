//2008m. vbe 17 psl
//transportas

#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char RF[]="ans.txt";
using namespace std;
void skaitau(int B[], int didzskc, string stot, int &l, char &c, const char SF[], int &n, int &n1, int A[]);
int main()
{   int n,l,didzskc;
    int n1=0;
    char c;
    string stot;
    int A[100]={0};
    int B[100]={0};
    skaitau(B,didzskc,stot,l,c,SF,n,n1,A);
    return 0;
}
void skaitau(int B[], int didzskc, string stot, int &l, char &c, const char SF[], int &n, int &n1, int A[]){
int x;
ifstream sf(SF);
sf>>n;
for(int i=0; i<n; i++){
        sf>>stot;
        c=sf.get();
        if(c==' '){
            c=sf.get();
        }
        while(isalpha(c)!=0){
            c=sf.get();
        }
        sf>>n1;
        for(int y=0; y<n1; y++){
           sf>>x;
            for(int l=0; l<100; l++){
                if(l==x){
                A[l]++;
            }
        }
}
}

int maxx=0;
for(int i=0; i<100; i++){
    if(A[i]>=maxx){
        maxx=A[i];
    }
}
for(int i=0; i<100; i++){
    if(A[i]==maxx){
        didzskc=i;
        break;
    }
}
ofstream rf(RF);
rf<<didzskc<<endl;
ifstream bf(SF);
bf>>n;
for(int i=0; i<n; i++){
        bf>>stot;
        c=bf.get();
        if(c==' '){
            c=bf.get();
        }


        while(isalpha(c)!=0){
            c=bf.get();
        }
        bf>>n1;
        for(int y=0; y<n1; y++){
           bf>>x;
           if(x==didzskc){
            B[i]=1;
           }
        }
}
ifstream cf(SF);
cf>>n;
for(int i=0; i<n; i++){
        cf>>stot;
        if(B[i]==1){
        rf<<stot;
        }
        c=cf.get();
        if(B[i]==1){
        rf<<c;
        }
        if(c==' '){
            c=cf.get();
            if(B[i]==1){
                rf<<c;
            }
        }
        while(isalpha(c)!=0){
            c=cf.get();
        if(B[i]==1){
        rf<<c;
}
}
cf>>n1;
for(int y=0; y<n1; y++){
    cf>>x;
}
if(B[i]==1){
rf<<" "<<endl;
}
}}


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////2009 VBE MAINAI/////////////////////////////////////////////////////////////////////


#include <iostream>
#include <fstream>
#include <iomanip>
#include <algorithm>
#include <string>
using namespace std;
const char FR[]="duom.txt";
const char FW[]="ans.txt";

void skaitom(const char FR[], int a[], int b[], int &k, int &n, int &sum, int &g, int &sum2);
void Skaiciavimas(int a[], int b[], int n, int k, int sum,int ats[], int ats2[], int sum2);
void Irasymas (const char FW[], int a[], int k, int n, int g, int ats[], int ats2[]);

int main()
{
    int a[3000], b[3000], k, n,g, sum,sum2, ats[3000], ats2[3000];
    skaitom(FR,a,b,k,n,sum, g, sum2);
    Skaiciavimas(a,b,n,k,sum, ats, ats2, sum2);
    Irasymas(FW, a, k, n, g, ats, ats2);
    return 0;
}
void skaitom (const char FR[], int a[], int b[], int &k, int &n, int &sum, int &g, int &sum2)
{
  sum2=0;
  sum=0;
  g=0;
  ifstream fr(FR);
  fr>>k;
      for(int i=0; i<k; i++)
        {
          fr>>a[i];
          g++;
        }
        for(int i=0; i<k; i++)
        {
        fr>>b[i];
        }
        for(int i=0; i<k; i++)
        {
         sum=sum+a[i]*b[i];
        }
    fr>>n;
    for(int i=g; i<n+g; i++)
    {
      fr>>a[i];
    }
    for(int i=g; i<n+g; i++)
    {
      fr>>b[i];
    }
    for(int i=g; i<n+g; i++)
        {
         sum2=sum2+a[i]*b[i];
        }
}
void Skaiciavimas(int a[], int b[], int n, int k, int sum, int ats[], int ats2[], int sum2)
{
    int lol=0;
    int lol2=0;
    int m=0;
    int m2=0;
    int g=0;
    int g2=0;
     for(int i=0; i<n+k; i++)
    {
        if(i>=6)
        {
            lol=sum%a[i];
            m=(sum-lol)/a[i];
            sum=lol;
            ats[0+g]=m;
            g++;
        }
    }
      for(int i=0; i<n+k; i++)
    {
        if(i<6)
        {
            lol2=sum2%a[i];
            m2=(sum2-lol2)/a[i];
            sum2=lol2;
            ats2[0+g2]=m2;
            g2++;
        }
    }
}

void Irasymas (const char FW[], int a[],int k, int n,int g, int ats[], int ats2[])
{
    int l=0;
    int t=0;
    ofstream fw(FW);
    for(int i=0; i<n+g; i++)
    {
        if(i>=6)
        {
        fw<<a[i]<<" "<<ats[i-k]<<endl;
        l=l+ats[i-k];
        }
    }
   fw<<l<<endl;
   for(int i=0; i<k+g-2; i++)
   {
    if(i<6)
        {
        fw<<a[i]<<" "<<ats2[i]<<endl;
        t=t+ats2[i];
        }
   }
   fw<<t;
}

