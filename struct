#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char RF[]="ans.txt";

using namespace std;
struct Duomenys
{
    string miestas;
    int kiekis;
    int vieta=0;
    int n=0;
    int A[20]={0};
    int vidurkis[2];
    int prizine=0;
};

void Skaityti (const char SF[], Duomenys A[], int &n1);

int main()
{
    int prizine[100];
    int n1;
    Duomenys A[3];
    Skaityti(SF,A, n1);
    return 0;
}

void Skaityti(const char SF[], Duomenys A[], int &n1)
{
    int k=0;
    int vidurkis=0;
    ifstream sf(SF);
    ofstream rf(RF);
     sf>>n1;
     for(int i=0; i<n1;i++)
     {
         sf>>A[i].miestas>>A[i].kiekis;
         for(int j=0; j<A[i].kiekis; j++)
         {
             sf>>A[i].A[i];
             vidurkis+=A[i].A[i];
             if(A[i].A[i]>0 && A[i].A[i]<4)
             {
               A[i].prizine++;
             }
         }
         vidurkis=vidurkis/A[i].kiekis;
         A[i].vidurkis[i]=vidurkis;
         vidurkis=0;
         rf<<A[i].miestas<<"  "<<A[i].vidurkis[i]<<" vieta"<<endl;
     }
       rf<<" "<<endl;
    rf<<"Daugiausiai medaliu iskovojes miestas:"<<endl;
       int maxx=0;
    for(int i=0; i<n1; i++)
        {
        if(A[i].prizine>=maxx)
        {
            maxx=A[i].prizine;
        }
    }
    for(int i=0; i<n1; i++)
    {
        if(A[i].prizine==maxx)
        {
            rf<<A[i].miestas<<"   "<<A[i].prizine<<" prizines vietos"<<endl;
        }
    }
}
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////rinktine ////////////////////////


#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char RF[]="ans.txt";

using namespace std;
struct Duomenys
{
  string vardas;
  string pavarde;
  string pozicija;
  int ugis;
  int svoris;
  int metai;
};

void Skaityti (const char SF[], Duomenys A[], int &n1);
void Vyriausias (Duomenys A[], int n1, int &vyriausias);
void Irasyti(const char RF[], Duomenys A[], int n1, int vyriausias);

int main()
{  
    int n1, vyriausias;
    Duomenys A[12];
    Skaityti(SF, A, n1);
    Vyriausias(A,n1, vyriausias);
    Irasyti(RF,A,n1, vyriausias);
    return 0;
}

void Skaityti(const char SF[], Duomenys A[], int &n1)
{
    ifstream sf(SF);
     sf>>n1;
     for(int i=0; i<n1;i++)
     {
      sf>>A[i].vardas>>A[i].pavarde>>A[i].pozicija>>A[i].ugis>>A[i].svoris>>A[i].metai;
     }
 
}
void Vyriausias (Duomenys A[], int n1, int &vyriausias)
{
     vyriausias=0;
    for(int i=0; i<n1;i++)
    {
        if(A[i].metai>=vyriausias)
        {
            vyriausias=A[i].metai;
        }
    }
}
void Irasyti(const char RF[],Duomenys A[], int n1, int vyriausias)
{
    ofstream rf(RF);
    for(int i=0; i<n1;i++)
     {
         if(A[i].metai==vyriausias)
         {
             rf<<" Vyriausias Lietuvos krepsinio rinktines zaidejas:"<<endl;
             rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
         }
     }
      rf<<" "<<endl;
      rf<<"Lietuvos rinktines puolejai:"<<endl;
   for(int i=0; i<n1;i++)
     {
         if(A[i].pozicija=="PF" || A[i].pozicija=="SF")
        {
        rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
        } 
    }
}


///////////////////////////////////////////////////////////////////////////////////


#include <iostream>
#include <fstream>
#include <cmath>
#include <string>

const char SF[]="duom.txt";
const char RF[]="ans.txt";
const int CMax= 12;
const int CPav= 20;

using namespace std;

struct Duomenys
{
  string vardas;
  int balsai;
};

void Skaityti (const char SF[], int &n, string bals[], string dalyv[], int &raktas);
void Skaiciuoti (Duomenys A[], string dalyv[], int n, int &max);
void Irasymas (const char RF[], Duomenys A[], int max, int raktas);

int main()
{  
    int n, max, raktas;
    Duomenys A[CMax];
    string bals[50], dalyv[50];
    Skaityti(SF, n, bals, dalyv, raktas);
    Skaiciuoti(A, dalyv, n, max);
    Irasymas(RF, A, max, raktas);
    return 0;
}

void Skaityti(const char SF[], int &n, string bals[], string dalyv[], int &raktas)
{
    raktas=0;
    ifstream sf(SF);
    char temp[CMax+1], temp2[CPav+1];
     sf>>n;
     sf.ignore(80, '\n');
     for(int i=0; i<n;i++)
     {
            sf.get(temp, CMax, '.');
            sf.ignore(2);
             sf.get(temp2, CPav, ' ');
             bals[i]= temp;
             dalyv[i]= temp2;
             sf.ignore(80, '\n');
         
     }
     
     for(int i=0; i<n;i++)
     {
         for(int j=i+1; j<n;j++)
         {
             if(bals[i]==bals[j])
             {
                raktas=1;
             }
             
         }
         
     }
}

void Skaiciuoti(Duomenys A[], string dalyv[], int n, int &max)
{
     A[0].balsai=0;
     A[1].balsai=0;
     A[2].balsai=0;
     A[3].balsai=0;
    for(int i=0; i<n;i++)
     {
         if(dalyv[i]=="Vaidotas")
         {
             A[0].balsai++;
             A[0].vardas="Vaidotas Vaicius";
         }
         if(dalyv[i]=="Lukas")
         {
             A[1].balsai++;
             A[1].vardas="Lukas Kulnelis";
         }
         if(dalyv[i]=="Tadas")
         {
             A[2].balsai++;
             A[2].vardas="Tadas Liutika";
         }
         if(dalyv[i]=="Justinas")
         {
             A[3].balsai++;
             A[3].vardas="Justinas Meleta";
         }
     }
     max=0;
     for(int i=0; i<4; i++)
    {
       if(A[i].balsai>max)
       {
           max=A[i].balsai;
       }
    }
}

void Irasymas (const char RF[], Duomenys A[], int max, int raktas)
{
    ofstream rf(RF);
    if(raktas==1)
    {
        rf<<"RINKIMAI SUKLASTOTI!!!";
    }
    else
    {
        for(int i=0; i<4; i++)
        {
             if(A[i].balsai==max)
             {
                 rf<<"laimejo:  "<<A[i].vardas<<" surinkes: "<<max<<" balsus"<<endl;
                 rf<<" "<<endl;
                 rf<<"Visu balsu suvestine:"<<endl;
             }
            rf<<A[i].vardas<<" "<<A[i].balsai<<endl;
        }
    }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//////////////////////////
void Naikiname(Duomenys A[], int n)
{
  for(int i=0; i<n; i++)
    {
        for(int j=i+1; i<n;j++)
        {
            if((A[i].vardas==A[j].vardas) && (A[i].pavarde==A[j].pavarde))
            {
                cout<<"yvgvghvghv ";

            }
        }
    }

}
////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char SF2[]="duom2.txt";
const char RF[]="akatsukai.txt";

using namespace std;
struct Duomenys
{
  string vardas;
  string pavarde;
  string pozicija;
  int ugis;
  int svoris;
  int metai;
};

void Skaityti (const char SF[],const char SF2[], Duomenys A[], int n1, int n2, int &n);
void Vyriausias (Duomenys A[], int n, int &vyriausias);
void Irasyti(const char RF[], Duomenys A[], int n, int vyriausias);

int main()
{
    int n1,n2,n, vyriausias;
    Duomenys A[50];
    Skaityti(SF,SF2, A, n, n2, n);
   Vyriausias(A,n, vyriausias);
    Irasyti(RF,A,n, vyriausias);
    return 0;
}

void Skaityti(const char SF[],const char SF2[], Duomenys A[],int n1, int n2, int &n)
{
    ifstream sf(SF);
     ifstream sf2(SF2);
     sf>>n1;
     sf2>>n2;
     n=n1+n2;
     for(int i=0; i<n1;i++)
     {
      sf>>A[i].vardas>>A[i].pavarde>>A[i].pozicija>>A[i].ugis>>A[i].svoris>>A[i].metai;
     }
     for(int i=n1; i<n1+n2;i++)
     {
         sf2>>A[i].vardas>>A[i].pavarde>>A[i].pozicija>>A[i].ugis>>A[i].svoris>>A[i].metai;
     }


}
void Vyriausias (Duomenys A[], int n, int &vyriausias)
{
     vyriausias=0;
    for(int i=0; i<n;i++)
    {
        if(A[i].ugis>=vyriausias)
        {
            vyriausias=A[i].ugis;
        }
    }

}
void Irasyti(const char RF[],Duomenys A[], int n, int vyriausias)
{
       ofstream rf(RF);
    for(int i=0; i<n;i++)
     {
         if(A[i].ugis==vyriausias)
         {
             rf<<" Vyriausias Lietuvos krepsinio rinktines zaidejas:"<<endl;
             rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
         }
     }
      rf<<" "<<endl;
      rf<<"Lietuvos rinktines puolejai:"<<endl;
   for(int i=0; i<n;i++)
     {
         if(A[i].pozicija=="PF" || A[i].pozicija=="SF")
        {
         rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
        } 
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////RINKITINE 110PSL//////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <fstream>
#include <cmath>
#include <string>

const char FR[]="duom.txt";
const char FW[]="ans.txt";
using namespace std;

struct Duomenys{
    string vardas;
    int ugis;
    int taskai;
};

void Skaityti(const char FR[], Duomenys A[], int &n, int &p, int &k);
void Skaiciuoti(Duomenys A[], int n, int p, int k, int &auksciausias, int &g);
void Irasyti (const char FW[], int n, Duomenys A[], int g, int k);
int main()
{
  int n,p,k,g, auksciausias;
  Duomenys A[40];
  Skaityti(FR, A, n, p, k);
  Skaiciuoti(A,n,p,k, auksciausias, g);
  Irasyti(FW, n, A, g, k);

    return 0;
}

void Skaityti(const char FR[], Duomenys A[], int &n, int &p, int &k)
{
     ifstream fr(FR);
     fr>>n;
     for(int i=0; i<n;i++)
     {
      fr>>A[i].vardas>>A[i].ugis>>A[i].taskai;
     }
     fr>>p>>k;
}

void Skaiciuoti(Duomenys A[], int n, int p, int k, int &auksciausias, int &g)
{
    double procentas=0;
    auksciausias=0;
    g=0;
    procentas=(100-p)*0.01;
    for(int i=0; i<n; i++)
    {
     if(A[i].ugis>=auksciausias)
        {
            auksciausias=A[i].ugis;
        }
    }
    g = auksciausias*procentas;

}

void Irasyti (const char FW[], int n, Duomenys A[], int g, int k)
{
    ofstream fw(FW);
    fw<<"VARDAS UGIS TASKAI:"<<endl;
    for(int i=0; i<n; i++)
    {
       if(A[i].ugis>=g || A[i].taskai>=k)
       {
           fw<<A[i].vardas<<"  "<<A[i].ugis<<"  "<<A[i].taskai<<endl;
       }
    }

}
//////////////////////////////////////////

/////////////////////////////////


#include <iostream>
#include <fstream>
#include <cmath>
#include <string>

const char FR[]="duom.txt";
const char FR2[]="duom2.txt";
const char FW[]="ans.txt";

using namespace std;
struct Duomenys{
   string vardas;
   string pavarde;
   int butonr;
   double siluma, elektra, vanduo;
};
void Skaityti (const char FR[], const char FR2[], Duomenys A[], int &n);
void Bandom (int n);
int main()
{
   int n;
   Duomenys A[200];
   Skaityti(FR,FR2,A,n);
   Bandom (n);
    return 0;
}
void Skaityti(const char FR[], const char FR2[], Duomenys A[], int &n)
{
    int m=0;
    ifstream fr(FR);
    ifstream fr2(FR2);
    fr>>n;
    for(int i=0; i<n; i++)
    {
        fr>>A[i].vardas>>A[i].pavarde>>A[i].butonr>>A[i].siluma>>A[i].elektra>>A[i].vanduo;
    }
    fr2>>m;
    for(int i=5; i<n+m; i++)
    {
        fr2>>A[i].vardas>>A[i].pavarde>>A[i].butonr>>A[i].siluma>>A[i].elektra>>A[i].vanduo;
    }
    n=n+m;
}

void Bandom (int n)
{
    cout<<n;
}


///////////////////////


5
Pirmasis Petras 15 5.5 0.0 -54.0
Antrute Jurgita 13 -25.05 2.5 -13
Katyte Pilkute 1 0.0 0.0 0.0
Katinas Batuotas 16 -5.5 -18.2 -45.0
Basas Algis 14 2.2 2.2 2.2
///////////////////////////


3 
Pirmasis Petras 15 0.0 0.0 14.0
Katyte Pilkute 1 3.0 0.0 3.0
Basas Algis 14 15.0 0.2 12.0

