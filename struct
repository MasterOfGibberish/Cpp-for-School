#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char RF[]="ans.txt";

using namespace std;
struct Duomenys
{
    string miestas;
    int kiekis;
    int vieta=0;
    int n=0;
    int A[20]={0};
    int vidurkis[2];
    int prizine=0;
};

void Skaityti (const char SF[], Duomenys A[], int &n1);

int main()
{
    int prizine[100];
    int n1;
    Duomenys A[3];
    Skaityti(SF,A, n1);
    return 0;
}

void Skaityti(const char SF[], Duomenys A[], int &n1)
{
    int k=0;
    int vidurkis=0;
    ifstream sf(SF);
    ofstream rf(RF);
     sf>>n1;
     for(int i=0; i<n1;i++)
     {
         sf>>A[i].miestas>>A[i].kiekis;
         for(int j=0; j<A[i].kiekis; j++)
         {
             sf>>A[i].A[i];
             vidurkis+=A[i].A[i];
             if(A[i].A[i]>0 && A[i].A[i]<4)
             {
               A[i].prizine++;
             }
         }
         vidurkis=vidurkis/A[i].kiekis;
         A[i].vidurkis[i]=vidurkis;
         vidurkis=0;
         rf<<A[i].miestas<<"  "<<A[i].vidurkis[i]<<" vieta"<<endl;
     }
       rf<<" "<<endl;
    rf<<"Daugiausiai medaliu iskovojes miestas:"<<endl;
       int maxx=0;
    for(int i=0; i<n1; i++)
        {
        if(A[i].prizine>=maxx)
        {
            maxx=A[i].prizine;
        }
    }
    for(int i=0; i<n1; i++)
    {
        if(A[i].prizine==maxx)
        {
            rf<<A[i].miestas<<"   "<<A[i].prizine<<" prizines vietos"<<endl;
        }
    }
}
\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
////////rinktine ////////////////////////


#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char RF[]="ans.txt";

using namespace std;
struct Duomenys
{
  string vardas;
  string pavarde;
  string pozicija;
  int ugis;
  int svoris;
  int metai;
};

void Skaityti (const char SF[], Duomenys A[], int &n1);
void Vyriausias (Duomenys A[], int n1, int &vyriausias);
void Irasyti(const char RF[], Duomenys A[], int n1, int vyriausias);

int main()
{  
    int n1, vyriausias;
    Duomenys A[12];
    Skaityti(SF, A, n1);
    Vyriausias(A,n1, vyriausias);
    Irasyti(RF,A,n1, vyriausias);
    return 0;
}

void Skaityti(const char SF[], Duomenys A[], int &n1)
{
    ifstream sf(SF);
     sf>>n1;
     for(int i=0; i<n1;i++)
     {
      sf>>A[i].vardas>>A[i].pavarde>>A[i].pozicija>>A[i].ugis>>A[i].svoris>>A[i].metai;
     }
 
}
void Vyriausias (Duomenys A[], int n1, int &vyriausias)
{
     vyriausias=0;
    for(int i=0; i<n1;i++)
    {
        if(A[i].metai>=vyriausias)
        {
            vyriausias=A[i].metai;
        }
    }
}
void Irasyti(const char RF[],Duomenys A[], int n1, int vyriausias)
{
    ofstream rf(RF);
    for(int i=0; i<n1;i++)
     {
         if(A[i].metai==vyriausias)
         {
             rf<<" Vyriausias Lietuvos krepsinio rinktines zaidejas:"<<endl;
             rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
         }
     }
      rf<<" "<<endl;
      rf<<"Lietuvos rinktines puolejai:"<<endl;
   for(int i=0; i<n1;i++)
     {
         if(A[i].pozicija=="PF" || A[i].pozicija=="SF")
        {
        rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
        } 
    }
}


///////////////////////////////////////////////////////////////////////////////////


#include <iostream>
#include <fstream>
#include <cmath>
#include <string>

const char SF[]="duom.txt";
const char RF[]="ans.txt";
const int CMax= 12;
const int CPav= 20;

using namespace std;

struct Duomenys
{
  string vardas;
  int balsai;
};

void Skaityti (const char SF[], int &n, string bals[], string dalyv[], int &raktas);
void Skaiciuoti (Duomenys A[], string dalyv[], int n, int &max);
void Irasymas (const char RF[], Duomenys A[], int max, int raktas);

int main()
{  
    int n, max, raktas;
    Duomenys A[CMax];
    string bals[50], dalyv[50];
    Skaityti(SF, n, bals, dalyv, raktas);
    Skaiciuoti(A, dalyv, n, max);
    Irasymas(RF, A, max, raktas);
    return 0;
}

void Skaityti(const char SF[], int &n, string bals[], string dalyv[], int &raktas)
{
    raktas=0;
    ifstream sf(SF);
    char temp[CMax+1], temp2[CPav+1];
     sf>>n;
     sf.ignore(80, '\n');
     for(int i=0; i<n;i++)
     {
            sf.get(temp, CMax, '.');
            sf.ignore(2);
             sf.get(temp2, CPav, ' ');
             bals[i]= temp;
             dalyv[i]= temp2;
             sf.ignore(80, '\n');
         
     }
     
     for(int i=0; i<n;i++)
     {
         for(int j=i+1; j<n;j++)
         {
             if(bals[i]==bals[j])
             {
                raktas=1;
             }
             
         }
         
     }
}

void Skaiciuoti(Duomenys A[], string dalyv[], int n, int &max)
{
     A[0].balsai=0;
     A[1].balsai=0;
     A[2].balsai=0;
     A[3].balsai=0;
    for(int i=0; i<n;i++)
     {
         if(dalyv[i]=="Vaidotas")
         {
             A[0].balsai++;
             A[0].vardas="Vaidotas Vaicius";
         }
         if(dalyv[i]=="Lukas")
         {
             A[1].balsai++;
             A[1].vardas="Lukas Kulnelis";
         }
         if(dalyv[i]=="Tadas")
         {
             A[2].balsai++;
             A[2].vardas="Tadas Liutika";
         }
         if(dalyv[i]=="Justinas")
         {
             A[3].balsai++;
             A[3].vardas="Justinas Meleta";
         }
     }
     max=0;
     for(int i=0; i<4; i++)
    {
       if(A[i].balsai>max)
       {
           max=A[i].balsai;
       }
    }
}

void Irasymas (const char RF[], Duomenys A[], int max, int raktas)
{
    ofstream rf(RF);
    if(raktas==1)
    {
        rf<<"RINKIMAI SUKLASTOTI!!!";
    }
    else
    {
        for(int i=0; i<4; i++)
        {
             if(A[i].balsai==max)
             {
                 rf<<"laimejo:  "<<A[i].vardas<<" surinkes: "<<max<<" balsus"<<endl;
                 rf<<" "<<endl;
                 rf<<"Visu balsu suvestine:"<<endl;
             }
            rf<<A[i].vardas<<" "<<A[i].balsai<<endl;
        }
    }
}
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////
//////////////////////////
void Naikiname(Duomenys A[], int n)
{
  for(int i=0; i<n; i++)
    {
        for(int j=i+1; i<n;j++)
        {
            if((A[i].vardas==A[j].vardas) && (A[i].pavarde==A[j].pavarde))
            {
                cout<<"yvgvghvghv ";

            }
        }
    }

}
////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
const char SF[]="duom.txt";
const char SF2[]="duom2.txt";
const char RF[]="akatsukai.txt";

using namespace std;
struct Duomenys
{
  string vardas;
  string pavarde;
  string pozicija;
  int ugis;
  int svoris;
  int metai;
};

void Skaityti (const char SF[],const char SF2[], Duomenys A[], int n1, int n2, int &n);
void Vyriausias (Duomenys A[], int n, int &vyriausias);
void Irasyti(const char RF[], Duomenys A[], int n, int vyriausias);

int main()
{
    int n1,n2,n, vyriausias;
    Duomenys A[50];
    Skaityti(SF,SF2, A, n, n2, n);
   Vyriausias(A,n, vyriausias);
    Irasyti(RF,A,n, vyriausias);
    return 0;
}

void Skaityti(const char SF[],const char SF2[], Duomenys A[],int n1, int n2, int &n)
{
    ifstream sf(SF);
     ifstream sf2(SF2);
     sf>>n1;
     sf2>>n2;
     n=n1+n2;
     for(int i=0; i<n1;i++)
     {
      sf>>A[i].vardas>>A[i].pavarde>>A[i].pozicija>>A[i].ugis>>A[i].svoris>>A[i].metai;
     }
     for(int i=n1; i<n1+n2;i++)
     {
         sf2>>A[i].vardas>>A[i].pavarde>>A[i].pozicija>>A[i].ugis>>A[i].svoris>>A[i].metai;
     }


}
void Vyriausias (Duomenys A[], int n, int &vyriausias)
{
     vyriausias=0;
    for(int i=0; i<n;i++)
    {
        if(A[i].ugis>=vyriausias)
        {
            vyriausias=A[i].ugis;
        }
    }

}
void Irasyti(const char RF[],Duomenys A[], int n, int vyriausias)
{
       ofstream rf(RF);
    for(int i=0; i<n;i++)
     {
         if(A[i].ugis==vyriausias)
         {
             rf<<" Vyriausias Lietuvos krepsinio rinktines zaidejas:"<<endl;
             rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
         }
     }
      rf<<" "<<endl;
      rf<<"Lietuvos rinktines puolejai:"<<endl;
   for(int i=0; i<n;i++)
     {
         if(A[i].pozicija=="PF" || A[i].pozicija=="SF")
        {
         rf<<A[i].vardas<<" "<<A[i].pavarde<<" "
            <<A[i].pozicija<<" "<<A[i].ugis<<" "<<"cm"<<" "<<A[i].svoris<<" "<<"KG"<<
            " "<<A[i].metai<<" "<<"metai"<<endl;
        } 
    }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////RINKITINE 110PSL//////////////////////////////////////////////////////////////////////////

#include <iostream>
#include <fstream>
#include <cmath>
#include <string>

const char FR[]="duom.txt";
const char FW[]="ans.txt";
using namespace std;

struct Duomenys{
    string vardas;
    double ugis, taskai;
};

void Skaityti(const char FR[], Duomenys A[], int &n, int &p, int &k);
void Skaiciuoti(Duomenys A[], int n, int p, int k, int &auksciausias, int &g);
void Irasyti (const char FW[], int n, Duomenys A[], int g, int k);
int main()
{
  int n,p,k,g, auksciausias;
  Duomenys A[40];
  Skaityti(FR, A, n, p, k);
  Skaiciuoti(A,n,p,k, auksciausias, g);
  Irasyti(FW, n, A, g, k);

    return 0;
}

void Skaityti(const char FR[], Duomenys A[], int &n, int &p, int &k)
{
     ifstream fr(FR);
     fr>>n;
     for(int i=0; i<n;i++)
     {
      fr>>A[i].vardas>>A[i].ugis>>A[i].taskai;
     }
     fr>>p>>k;
}

void Skaiciuoti(Duomenys A[], int n, int p, int k, int &auksciausias, int &g)
{
    double procentas=0;
    auksciausias=0;
    g=0;
    procentas=(100-p)*0.01;
    for(int i=0; i<n; i++)
    {
     if(A[i].ugis>=auksciausias)
        {
            auksciausias=A[i].ugis;
        }
    }
    g = auksciausias*procentas;

}

void Irasyti (const char FW[], int n, Duomenys A[], int g, int k)
{
    ofstream fw(FW);
    fw<<"VARDAS UGIS TASKAI:"<<endl;
    for(int i=0; i<n; i++)
    {
       if(A[i].ugis>=g || A[i].taskai>=k)
       {
           fw<<A[i].vardas<<"  "<<A[i].ugis<<"  "<<A[i].taskai<<endl;
       }
    }
}
//////////////////////////////////////////

/////////////////////////////////


#include <iostream>
#include <fstream>
#include <cmath>
#include <string>
#include <iomanip>

const char FR[]="duom.txt";
const char FR2[]="duom2.txt";
const char FW[]="ans.txt";

using namespace std;
struct Duomenys{
   string vardas;
   string pavarde;
   int butonr;
   double siluma, elektra, vanduo;
};
void Skaityti (const char FR[], const char FR2[], Duomenys A[], int &n);
void Skaiciuojame(Duomenys A[],int &n);
void Irasome(const char FW[], Duomenys A[], int n);
int main()
{
   int n;
   Duomenys A[200];
   Skaityti(FR,FR2,A,n);
   Skaiciuojame(A,n);
   Irasome(FW,A,n);
    return 0;
}
void Skaityti(const char FR[], const char FR2[], Duomenys A[], int &n)
{
    int m=0;
    ifstream fr(FR);
    ifstream fr2(FR2);
    fr>>n;
    for(int i=0; i<n; i++)
    {
        fr>>A[i].vardas>>A[i].pavarde>>A[i].butonr>>A[i].siluma>>A[i].elektra>>A[i].vanduo;
    }
    fr2>>m;
    for(int i=5; i<n+m; i++)
    {
        fr2>>A[i].vardas>>A[i].pavarde>>A[i].butonr>>A[i].siluma>>A[i].elektra>>A[i].vanduo;
    }
    n=n+m;
}

void Skaiciuojame(Duomenys A[], int &n)
{
    int k=0;
    for(int i=0; i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
           if(A[i].vardas==A[j].vardas && A[i].pavarde==A[j].pavarde)
           {
              A[i].siluma+=A[j].siluma;
              A[i].elektra+=A[j].elektra;
              A[i].vanduo+=A[j].vanduo;
              k++;
           }
        }
    }
    n-=k;
}
void Irasome(const char FW[], Duomenys A[], int n)
{
    ofstream fw(FW);
    fw<<"--------------------------------------------------------"<<endl;
    fw<<" Vardas, pavarde   Buto nr.  Sildymas  Elektra  Vanduo"<<endl;
    fw<<"--------------------------------------------------------"<<endl;
    for(int i=0;i<n;i++)
    {
        fw<<fixed<<setprecision(2)<<A[i].vardas<<" "<<A[i].pavarde<<" "<<A[i].butonr<<" "<<
        A[i].siluma<<" "<<A[i].elektra<<" "<<A[i].vanduo<<endl;
    }
    fw<<"---------------------------------------------------"<<endl;
    fw<<" "<<endl;
    fw<<" "<<endl;
    fw<<"--------------------------------------------------------"<<endl;
    fw<<" Vardas, pavarde   Buto nr.  Sildymas  Elektra  Vanduo"<<endl;
    fw<<"--------------------------------------------------------"<<endl;
    for(int i=0;i<n;i++)
    {
        if(A[i].elektra<0 || A[i].siluma<0 || A[i].vanduo<0 )
        {
             fw<<fixed<<setprecision(2)<<A[i].vardas<<" "<<A[i].pavarde<<" "<<A[i].butonr<<" "<<
             A[i].siluma<<" "<<A[i].elektra<<" "<<A[i].vanduo<<endl;
        }
    }
    fw<<"---------------------------------------------------"<<endl;
}
///////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////Prekes 138psl.//////////////////////////////

#include <iostream>
#include <fstream>
#include <iomanip>
const char FR[]="duom.txt";
const char FW[]="ats.txt";
const int Max=20;
const int data=11;

using namespace std;

struct Duomenys{
  string pavadinimas,galiojimas;
  int vartojimas;
};
void Skaityti(const char FR[], Duomenys A[], int &n);
void Tikrinimas(Duomenys A[], int n, string &kintamasis, string &kintamasis2);
void Irasymas(const char FW[], Duomenys A[], int n, string kintamasis, string kintamasis2);

int main()
{ int n;
   string kintamasis, kintamasis2;
    Duomenys A[100];
    Skaityti(FR,A,n);
    Tikrinimas(A,n, kintamasis, kintamasis2);
    Irasymas(FW, A, n, kintamasis, kintamasis2);
    return 0;
}

void Skaityti(const char FR[], Duomenys A[], int &n)
{
    ifstream fr(FR);
    int k=0;
    char name[Max+1], laikas[data+1];
    fr>>n;
    fr.ignore(80,'\n');
    for(int i=0;i<n;i++)
    {
        fr.get(name,Max,'2');
        A[i].pavadinimas=name;
        fr.get(laikas, data);
        A[i].galiojimas=laikas;
        fr>>k;
        A[i].vartojimas=k;
        fr.ignore(80,'\n');
    }
}

void Tikrinimas(Duomenys A[], int n, string &kintamasis, string &kintamasis2)
{
    kintamasis="";
    kintamasis2="";
    string ivestis="";

    string belekas=""; //naudojamas tik, kad teisingai perskaitytu duomenis, taciau jis niekur nenaudojamas
    cout<<"iveskite galiojimo data: "<<endl;

    getline(cin,ivestis,'\n');
    kintamasis=ivestis;
    getline(cin, ivestis, '\n');
    kintamasis2=ivestis;
    getline(cin, belekas, '\n');
    cout<<"-------------------------------"<<endl;
    cout<<"jus ivedete"<<" "<<kintamasis<< " -"<<kintamasis2<<endl;
    cout<<"-------------------------------"<<endl;


}
void Irasymas(const char FW[], Duomenys A[], int n, string kintamasis, string kintamasis2)
{
    int k=0;
    int g=0;
    double j=0.0;
    ofstream fw(FW);
    fw<<"-------------------------------"<<endl;
    for(int i=0; i<n;i++)
    {
        if(A[i].galiojimas>=kintamasis && A[i].galiojimas<=kintamasis2)
        {
              fw<<A[i].pavadinimas<<" "<<A[i].galiojimas<<" "<<A[i].vartojimas <<endl;
              g+=A[i].vartojimas;
              k++;
        }
    }
    fw<<"-------------------------------"<<endl;
    j=double(g/k);
    cout<<k;
    fw<<fixed<<setprecision(2)<<"Vartojimo vidurkis "<<j<<endl;

}
//////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////
#include <iostream>
#include <fstream>>
const char FR[]="duom.txt";
const char FW[]="Ats.txt";
const int Max=20;
const int Max1=11;

using namespace std;
struct Duomenys{
   string vardas;
   int metai, menuo, diena, para;
    double mokestis;
};
void Skaityti(const char FR[], Duomenys A[], int &n);
void Skaiciuoti(Duomenys A[], int n);
int main()
{
    int n;
   Duomenys A[100];
   Skaityti(FR,A,n);
   Skaiciuoti(A,n);
    return 0;
}
void Skaityti(const char FR[], Duomenys A[], int &n)
{
    ifstream fr(FR);
    fr>>n;
    int k=0;
    double g=0;
    char name[Max+1];
    int laikas[Max1+1];
    fr.ignore(80,'\n');
    for(int i=0; i<n;i++)
    {
        fr.get(name, Max,'2');
        A[i].vardas=name;
        fr.get(laikas,Max1);
        A[i].data=laikas;
        fr>>k;
        A[i].para=k;
        fr>>g;
        A[i].mokestis=g;
        fr.ignore(80,'\n');
    }
}
void Skaiciuoti(Duomenys A[], int n)
{
    for(int i=0;i<n;i++)
    {
      cout<<A[i].data<<endl;
    }

}

//////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////// VIESBUCIO GYVENTOJAI 138 PSL

#include <iostream>
#include <fstream>
const char FR[]="duom.txt";
const char FW[]="Ats.txt";
const int Max=20;

using namespace std;
struct Duomenys{
   string vardas;
   int metai, menuo, diena, para;
    double mokestis;
};
struct Duomenys2{
   int metai2, menuo2, diena2;
};
void Skaityti(const char FR[], Duomenys A[], int &n);
void Skaiciuoti(Duomenys A[], int n, Duomenys2 B[]);
void Irasyti (const char FW[], Duomenys A[], int n, Duomenys2 B[]);
int main()
{
    int n;
   Duomenys A[100];
   Duomenys2 B[100];
   Skaityti(FR,A,n);
   Skaiciuoti(A,n, B);
   Irasyti(FW, A, n,B);
    return 0;
}
void Skaityti(const char FR[], Duomenys A[], int &n) //Perskaitome
{
    ifstream fr(FR);
    fr>>n;
    char name[Max+1];
    fr.ignore(80,'\n');
    for(int i=0; i<n;i++)
    {
        fr.get(name, Max,'2');
        A[i].vardas=name;
        fr>>A[i].metai>>A[i].menuo>>A[i].diena>>A[i].para>>A[i].mokestis;
        fr.ignore(80,'\n');
    }
    fr.close();
}
void Skaiciuoti(Duomenys A[], int n, Duomenys2 B[]) 
{
    for(int i=0;i<n;i++)
    {
      A[i].mokestis=A[i].mokestis*A[i].para; //suskaiciuoju mokesti
      
      B[i].metai2=A[i].metai; //prilyginu jog issaugociau atvykimo data
      B[i].menuo2=A[i].menuo;
      B[i].diena2=A[i].diena;
    }
        for(int i=0;i<n;i++) //skaiciuoja isvykimo data (yra paklaida nes imu 30 dienas uz menesi)
        {
            for(int j=0;j<A[i].para;j++)
            {
                if(A[i].diena<=30)
                {
                    A[i].diena++;
                }
                if(A[i].diena>30)
                {
                    A[i].diena=0;
                    A[i].menuo++;
                }
                if(A[i].menuo>12)
                {
                    A[i].menuo=1;
                    A[i].metai++;
                }
            }
      }
      
      for(int i=0; i<n;i++) //surusiuojama pagal mokesti
      {
          for(int j=i+1;j<n;j++)
          {
              if(A[i].mokestis<A[j].mokestis)
              {
                  swap(A[i],A[j]);
              }
          }
      }
}
void Irasyti (const char FW[], Duomenys A[], int n, Duomenys2 B[])
{
    ofstream fw(FW);
    fw<<"Vardas, Pavarde      Atvyko   Isvyko     Sumokejo"<<endl;
    fw<<"----------------------------------------------------"<<endl;
     for(int i=0;i<n;i++)
    {
       fw<<A[i].vardas<<" "<<B[i].metai2<<" "<<B[i].menuo2<<" "<<B[i].diena2
       <<"   "<<A[i].metai<<" "<<A[i].menuo<<" "<<A[i].diena<<"     "<<A[i].mokestis<<endl;
    }
        fw<<"----------------------------------------------------"<<endl;
    fw.close();
}
///////////////////////////////////////////////////////////////////////////////
//Duomenys:
3 
Pirmas Petras 2010 12 25 15 25.5 
Antrute Jurgita 2011 01 15 65 24.36 
Pilkoji Pelyte 2010 11 01 155 0.1

/////////////////////////////////////////////////////////////////////////////////////////
//////////////////     ABONENTAI   138PSL.
#include <iostream>
#include <fstream>
#include <iomanip>
const char FR[]="duom.txt";
const char FR2[]="duom2.txt";
const char FW[]="akatsukai.txt";
const int Max=20;
using namespace std;

struct Duomenys{
  string vardas;
  int numeris;
  string miestas;
  double laikas;
};
struct Duomenys2{
  string miestas2;
  double kaina;
};
void Skaityti(const char FR[],const char FR2[], Duomenys A[], Duomenys2 B[], int &n, int &m);
void Skaiciuojame (Duomenys A[], Duomenys2 B[],int &n, int m);
void Irasyti(const char FW[], Duomenys A[], int n);

int main()
{ 
    int n,m;
    Duomenys A[100];
    Duomenys2 B[100];
    Skaityti(FR,FR2,A,B,n,m);
    Skaiciuojame(A,B,n,m);
    Irasyti(FW,A,n);
    return 0;
}
void Skaityti(const char FR[],const char FR2[], Duomenys A[], Duomenys2 B[],int &n, int &m)
{
    ifstream fr(FR);
    char name[Max+1];
    fr>>n;
    fr.ignore(100,'\n');
    for(int i=0;i<n;i++)
    {
        fr.get(name,Max,'8');
        A[i].vardas=name;
        fr>>A[i].numeris>>A[i].miestas>>A[i].laikas;
        fr.ignore(100,'\n');
    }
    fr.close();
    
    ifstream fr2(FR2);
    fr2>>m;
    for(int i=0;i<m;i++)
    {
        fr2>>B[i].miestas2>>B[i].kaina;
    }
}

void Skaiciuojame (Duomenys A[], Duomenys2 B[],int &n, int m)
{
    int k=0;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            if(A[i].miestas==B[j].miestas2)
            {
                k++;
                A[i].laikas=A[i].laikas*B[j].kaina;
            }
        }
    }
    n=k;
}

void Irasyti(const char FW[], Duomenys A[], int n)
{
    double k=0;
    ofstream fw(FW);
    fw<<"Vardas, Pavarde       Mokestis"<<endl;
    fw<<"---------------------------------------"<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(A[i].vardas==A[j].vardas)
            {
                A[i].laikas=A[j].laikas+A[i].laikas;
                A[j].vardas="pasikartojantis ";
            }
        }
        if(A[i].vardas!="pasikartojantis ")
        {
            k+=A[i].laikas;
          fw<<fixed<<setprecision(2)<<A[i].vardas<<A[i].laikas<<endl;  
        }
    }
    fw<<"---------------------------------------"<<endl;
    fw<<"Pajamos: "<<k<<endl;
}


////////////////////////////////////
//////Duomenys:
5
Pirmasis Petras     86959595 Klaipeda 12
Antrute Jurgita     86959594 Klaipeda 24
Jugutis Jurgis      86959593 Vilnius 12
Antrute Jurgita     86949592 Vilnius 15
Rimutis Rimas       86959591 Raseiniai 12

7
Ariogala 12.5
Baisiogala 6.25
Klaipeda 10.89
Kaunas 5.5 
Raseiniai 6.5 
Vilnius 5.68
Voskoniai 7.8



\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
8 6
Kava "Domino"                3
Arbata "Soliraris"           3
Sumuštinis "O-lia-lia"       5
Sultys "Multi"               2
Oriniai pyragėliai           3
Bandelė "Paris"              4
Viščiukas "Kakadu"           15
Kepsnys "Sapnas"             20
4 0 4 0 0 0 0 0
0 5 1 0 2 2 0 0
2 5 0 2 7 2 6 1
0 0 6 6 0 0 0 0
6 0 3 3 0 0 3 3
0 5 0 5 0 0 0 5
///////////////////////////////////////////////
/////////////////////////
#include<fstream>
#include <iostream>
const char FR[]="duom.txt";
const char FW[]="ats.txt";
const int Max=24;
using namespace std;
//typedef int b[100][100];
struct Duomenys{
    string pavadinimas;
    int kaina;
    int masyvas[8][6];
};
void Skaityti(const char FR[], Duomenys A[], int &n, int &m);

int main()
{
   
    int n,m;
    Duomenys A[100];
    Skaityti(FR,A,n,m);
    return 0;
}

void Skaityti(const char FR[], Duomenys A[], int &n, int &m)
{
    ifstream fr(FR);
    char name[Max+1];
    fr>>n>>m;
    fr.ignore(100,'\n');
    for(int i=0;i<n;i++)
    {
        fr.get(name,Max);
        A[i].pavadinimas=name;
        fr>>A[i].kaina;
        //cout<<A[i].pavadinimas<<" "<<A[i].kaina<<endl;
        fr.ignore(100,'\n');
    }
    for(int i=0; i<m;i++)
    {
        for(int j=0;j<n;j++)
        {
            fr>>A[j][i].masyvas;
            //cout<<i<<" "<<j;
        }
    }
    fr.close();
}






