#include <iostream>
#include <fstream>
#include <iomanip>
#include <algorithm>
#include <string>

const char FR[]="duom.txt";
const char FW[]="Akatsukai.txt";

using namespace std;

void Skaito (const char FR[], int a[], int &n);
void display (const char FW[], int a[], int n);
void Skaiciuojame (int a[], int n);
void naikiname (int a[], int n, int &k);
void Iterpiame(int a[], int &n, int k);
void Irasymas (const char FW[], int n, int a[], int min );

int main()
{
 int a[100], n;
 int k=0;
 int min=0;
  Skaito(FR,a,n);
  Skaiciuojame(a,n);
  naikiname(a,n, k);
  Iterpiame( a, n,k);
  Irasymas(FW, n, a,min);
  return 0;
}

void Skaito (const char FR[],int a[], int &n)
{
   ifstream fr(FR);
   fr>>n;
  for(int i=0; i<n; i++)
  {
       fr>>a[i];
  }
}

void Skaiciuojame (int a[], int n)
{
   sort(a, a+n);
   display(FW, a, n);
 }
 
void naikiname(int a[], int n, int &k){
    int m;
    for(int i=0; i<n; i++)
  {
    for(int j=i+1; j<n; j++)
       {
           if(a[i]==a[j]){
               a[i]==a[j];
               m=i;
                a[m]=69;
             k++;
           }
       }
    }
}
    
void display(const char FW[], int a[], int n) {
       ofstream fw(FW);
   for(int i = 0; i < n; ++i)
   {
       fw<< a[i] <<" ";
   }
   fw<<" "<<endl;
} 

void Iterpiame(int a[], int &n, int k)
{
    int g=n;
    for(int i=0; i<g;i++){
        if(a[i]==0){
            for(int t=g;t>i;t--)
            {
            
                a[t+1]=a[t];
            }
            g++;
            a[i+1]=100;
            }
        }
    
    n=g;
    
}

void Irasymas (const char FW[], int n,  int a[], int min)
{
   ofstream fw(FW, ios::app);
    for(int i=0; i<n; i++)
  {
     if(a[i]==69)
     {
       fw<<" ";
         
     }
       if(a[i]!=69)
       {
       fw<<a[i]<<" ";
       }
      
  }
  fw.close();
}
///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////
////////////////////////////////////
/////////////
#include<fstream>
#include <iostream>
#include <algorithm> // until c++11
#include <utility>
#include <cmath>
#include <vector>

const char FR[]="duom.txt";
using namespace std;
struct Duomenys
{
    string vardas;
    char lytis;
    int ugis;
};
void Skaityti(const char FR[], int &n, Duomenys A[]);
void Rykiuoti(int n, Duomenys A[]);
int main()
{
    Duomenys A[100];
    int n;
    Skaityti(FR,n,A);
    Rykiuoti(n,A);
    return 0;
}

void Skaityti(const char FR[], int &n, Duomenys A[])
{
   ifstream fr(FR);
   fr>>n;
   for(int i=0;i<n;i++)
   {
       fr>>A[i].vardas>>A[i].lytis>>A[i].ugis;
       //cout<<A[i].vardas<<" "<<A[i].lytis<<" "<<A[i].ugis<<endl;
   }

   fr.close();
   
}

void Rykiuoti(int n, Duomenys A[])
{
    for(int i=0;i<n;i++)
    {
        for(int j=i+1;j<n;j++)
        {
            if(A[i].ugis<A[j].ugis)
            {
                swap(A[i],A[j]);
            }
        }
    }
    for(int i=0;i<n;i++)
    {
        cout<<A[i].vardas<<" "<<A[i].lytis<<" "<<A[i].ugis<<endl; 
    }
    vector<Duomenys>duomenys;
    for(int i=0;i<n;i++)
    {
        //cout<<A[i].vardas<<" "<<A[i].lytis<<" "<<A[i].ugis<<endl; 
        if(A[i].lytis=='w')
        {
            int a=i-1;
            cout<<i;
            duomenys.erase(duomenys.begin());
        }
        
    }
     for(int i=0;i<n;i++)
    {
        cout<<A[i].vardas<<" "<<A[i].lytis<<" "<<A[i].ugis<<endl; 
    }
}

//////////////////////////////
//////////////
///////
3
baxuras m 190
moteeris m 180
baxuras w 210


